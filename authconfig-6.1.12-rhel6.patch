diff -up authconfig-6.1.12/authinfo.py.rhel6 authconfig-6.1.12/authinfo.py
--- authconfig-6.1.12/authinfo.py.rhel6	2010-12-23 17:38:53.000000000 +0100
+++ authconfig-6.1.12/authinfo.py	2011-01-13 17:27:25.000000000 +0100
@@ -496,8 +496,6 @@ pam_modules[STANDARD] = [
 	 "keyinit",		argv_keyinit_session],
 	[True,  SESSION,	LOGIC_REQUIRED,
 	 "limits",		[]],
-	[True,  SESSION,	LOGIC_OPTIONAL,
-	 "systemd",		[]],
 	[False, SESSION,	LOGIC_OPTIONAL,
 	 "mkhomedir",		[]],
 	[True,  SESSION,	LOGIC_SKIPNEXT,
@@ -587,8 +585,6 @@ pam_modules[PASSWORD_ONLY] = [
 	 "keyinit",		argv_keyinit_session],
 	[True,  SESSION,	LOGIC_REQUIRED,
 	 "limits",		[]],
-	[True,  SESSION,	LOGIC_OPTIONAL,
-	 "systemd",		[]],
 	[False, SESSION,	LOGIC_OPTIONAL,
 	 "mkhomedir",		[]],
 	[True,  SESSION,	LOGIC_SKIPNEXT,
@@ -640,8 +636,6 @@ pam_modules[FINGERPRINT] = [
 	 "keyinit",		argv_keyinit_session],
 	[True,  SESSION,	LOGIC_REQUIRED,
 	 "limits",		[]],
-	[True,  SESSION,	LOGIC_OPTIONAL,
-	 "systemd",		[]],
 	[False, SESSION,	LOGIC_OPTIONAL,
 	 "mkhomedir",		[]],
 	[True,  SESSION,	LOGIC_SKIPNEXT,
@@ -695,8 +689,6 @@ pam_modules[SMARTCARD] = [
 	 "keyinit",		argv_keyinit_session],
 	[True,  SESSION,	LOGIC_REQUIRED,
 	 "limits",		[]],
-	[True,  SESSION,	LOGIC_OPTIONAL,
-	 "systemd",		[]],
 	[False, SESSION,	LOGIC_OPTIONAL,
 	 "mkhomedir",		[]],
 	[True,  SESSION,	LOGIC_SKIPNEXT,
@@ -1246,7 +1238,6 @@ class AuthInfo:
 		self.localuserArgs = ""
 		self.pamAccessArgs = ""
 		self.mkhomedirArgs = ""
-		self.systemdArgs = ""
 		self.ldapCacertDir = ""
 		self.ldapCacertURL = ""
 		self.ldapSchema = ""
@@ -1304,7 +1295,7 @@ class AuthInfo:
 		("enableOTP", "b"), ("enablePasswdQC", "b"),
 		("enableLocAuthorize", "b"), ("enableSysNetAuth", "b"), ("winbindOffline", "b"),
 		("enableSSSDAuth", "b"), ("enableFprintd", "b"), ("pamLinked", "b"),
-		("implicitSSSDAuth", "b"), ("systemdArgs", "c")]),
+		("implicitSSSDAuth", "b")]),
 	SaveGroup(self.writeSysconfig, [("passwordAlgorithm", "i"), ("enableShadow", "b"), ("enableNIS", "b"),
 		("enableLDAP", "b"), ("enableLDAPAuth", "b"), ("enableKerberos", "b"),
 		("enableSmartcard", "b"), ("forceSmartcard", "b"),
@@ -1927,10 +1918,6 @@ class AuthInfo:
 				if args:
 					self.setParam("localuserArgs", args, ref)
 				continue
-			if module.startswith("pam_systemd"):
-				if args:
-					self.setParam("systemdArgs", args, ref)
-				continue
 			if stack == "password":
 				if module.startswith("pam_unix"):
 					for algo in password_algorithms:
@@ -3243,10 +3230,6 @@ class AuthInfo:
 			if name == "mkhomedir" and os.access("%s/pam_%s.so"
 				% (AUTH_MODULE_DIR, "oddjob_mkhomedir"), os.X_OK):
 				name = "oddjob_mkhomedir"
-			# the missing pam_systemd module should not be logged as error
-			if name == "systemd":
-				output += "-"
-				warn = False
 			output += "%-12s%-13s pam_%s.so" % (stack, logic,
 				name)
 			if warn and not name in self.module_missing and not os.access("%s/pam_%s.so"
@@ -3264,8 +3247,6 @@ class AuthInfo:
 				args = self.pamAccessArgs
 			if name == "mkhomedir" or name =="oddjob_mkhomedir":
 				args = self.mkhomedirArgs
-			if name == "systemd":
-				args = self.systemdArgs
 			if not args and module[ARGV]:
 				args = " ".join(module[ARGV])
 			if name == "winbind" and self.winbindOffline:
